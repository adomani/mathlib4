# This workflow allows any user to add or remove one of the labels in the array `labelArray`
# by commenting on the PR or issue.

name: Label PR based on Comment

on:
  issue_comment:
    types: [created]

# Limit permissions for GITHUB_TOKEN for the entire workflow
permissions:
  contents: read
  pull-requests: write  # Only allow PR comments/labels
  # All other permissions are implicitly 'none'

jobs:
  update-label:
    env:
      COMMENT: ${{ github.event.comment.body }}
    runs-on: ubuntu-latest

    steps:
    - name: Add / remove label based on comment
      run: |
        labelArray=("awaiting-author" "WIP" "easy")

        # we strip `\r` since line endings from GitHub contain this character
        COMMENT="${COMMENT//$'\r'/}"

        # trim leading/trailing whitespace and collapse "internal" whitespace
        COMMENT="$(printf '%s' "${COMMENT}" | awk '{$1=$1};1')"

        # If, after trimming whitespace, the comment spans more than one line, we do not act.
        if [ "$(wc -l <<< "${COMMENT}")" -ne 1 ]
        then
          printf $'The comment contains more than a single line: exiting.\n'
          exit 0
        fi

        # for debugging, we print some information
        printf '%s' "${COMMENT}" | hexdump -cC
        printf 'Comment:"%s"\n' "${COMMENT}"

        for i in ${!labelArray[@]}; do
          inComment=""
          label="${labelArray[$i]}"
          printf $'\nProcessing label \'%s\'\n' "${label}"
          inComment="$(printf '%s' "${COMMENT}" | grep "[-]\?${label}$")"
          if [ -n "${inComment}" ]
          then
            printf $'Found \'%s\'\n' "${inComment}"
            if [ "${inComment:0:1}" == "-" ]
            then
              printf $'Removing label \'%s\'\n' "${label}"
              req="DELETE"
            else
              printf $'Adding label \'%s\'\n' "${label}"
              req="POST"
            fi

            # we use curl rather than octokit/request-action so that the job won't fail
            # (and send an annoying email) if the labels don't exist
            curl --request "${req}" \
              --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels/"${label}" \
              --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
            printf $'%s %s done\n' "${inComment}" "${req}"

          else
            printf $'Label \'%s\' not found.\n' "${label}"
          fi

        done
